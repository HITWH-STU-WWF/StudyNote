什么是 XML？
XML 指可扩展标记语言（EXtensible Markup Language）。
XML 是一种很像HTML的标记语言。
XML 的设计宗旨是传输数据，而不是显示数据。
XML 标签没有被预定义。您需要自行定义标签。
XML 被设计为具有自我描述性。
XML 是 W3C 的推荐标准。


XML 被设计用来传输和存储数据
HTML 被设计用来显示数据

XML 被设计用来传输和存储数据，其焦点是数据的内容。
HTML 被设计用来显示数据，其焦点是数据的外观。
HTML 旨在显示信息，而 XML 旨在传输信息。

XML不会做任何事情。XML 被设计用来结构化、存储以及传输信息
XML 语言没有预定义的标签。
HTML 中使用的标签都是预定义的。HTML 文档只能使用在 HTML 标准中定义过的标签（如 <p>、<h1> 等等）。
XML 允许创作者定义自己的标签和自己的文档结构。	比如使用：<to>或<from>	

XML 是对 HTML 的补充。
XML 不会替代 HTML，理解这一点很重要。在大多数 Web 应用程序中，XML 用于传输数据，而 HTML 用于格式化并显示数据。
对 XML 最好的描述是：
XML 是独立于软件和硬件的信息传输工具。

由于可以通过各种不兼容的应用程序来读取数据，以 XML 交换数据降低了这种复杂性
<?xml version="1.0" encoding="UTF-8"?>
<note>
<to>Tove</to>
<from>Jani</from>
<heading>Reminder</heading>
<body>Don't forget me this weekend!</body>
</note>

第一行是 XML 声明。它定义 XML 的版本（1.0）和所使用的编码（UTF-8 : 万国码, 可显示各种语言）
下一行描述文档的根元素（像在说："本文档是一个便签"）：<note>	根元素也不时预定的

XML 文档形成一种树结构
XML 文档必须包含根元素。该元素是所有其他元素的父元素。
XML 文档中的元素形成了一棵文档树。这棵树从根部开始，并扩展到树的最底端。
所有的元素都可以有子元素,且所有元素都可以有属性

xml语法规则：
XML 必须包含根元素，它是所有其他元素的父元素
XML 声明文件的可选部分，如果存在需要放在文档的第一行，如下所示：
<?xml version="1.0" encoding="utf-8"?>
所有的 XML 元素都必须有一个关闭标签	<to> 	</to>关闭标签
注意：XML 声明没有关闭标签。这不是错误。声明不是 XML 文档本身的一部分，它没有关闭标签
XML 标签对大小写敏感。标签 <Letter> 与标签 <letter> 是不同的。

与 HTML 类似，XML 元素也可拥有属性（名称/值的对）
在 XML 中，XML 的属性值必须加引号,如：<note date="12/11/2007">正确	<note date=12/11/2007>错误

实体引用：
在XML中，一些字符拥有特殊的意义，在要表示这些字符的时候，应该使用实体引用来代替
在 XML 中，有 5 个预定义的实体引用：
&lt;	<	less than
&gt;	>	greater than
&amp;	&	ampersand
&apos;	'	apostrophe
&quot;	"	quotation mark
<message>if salary < 1000 then</message>   ----->   正确表示方法应该是：<message>if salary &lt; 1000 then</message>

XML 中的注释：<!-- This is a comment -->
在 XML 中，空格会被保留，文档中的空格不会被删减

XML 以 LF 存储换行
在 Windows 应用程序中，换行通常以一对字符来存储：回车符（CR）和换行符（LF）。
在 Unix 和 Mac OSX 中，使用 LF 来存储新行。
在旧的 Mac 系统中，使用 CR 来存储新行。
XML 以 LF 存储换行。

XML 命名规则
XML 元素必须遵循以下命名规则：
名称可以包含字母、数字以及其他的字符
名称不能以数字或者标点符号开始
名称不能以字母 xml（或者 XML、Xml 等等）开始
名称不能包含空格
可使用任何名称，没有保留的字词
最佳命名习惯：
避免 "-" 字符。如果您按照这样的方式进行命名："first-name"，一些软件会认为您想要从 first 里边减去 name
避免 "." 字符。如果您按照这样的方式进行命名："first.name"，一些软件会认为 "name" 是对象 "first" 的属性
避免 ":" 字符。冒号会被转换为命名空间来使用（稍后介绍）

没有什么规矩可以告诉我们什么时候该使用属性，而什么时候该使用元素。我的经验是在 HTML 中，属性用起来很便利，但是在 XML 中，您应该尽量避免使用属性。如果信息感觉起来很像数据，那么请使用元素吧

因使用属性而引起的一些问题：
属性不能包含多个值（元素可以）
属性不能包含树结构（元素可以）
属性不容易扩展（为未来的变化）
属性难以阅读和维护。请尽量使用元素来描述数据。而仅仅使用属性来提供与数据无关的信息。

在此我们极力向您传递的理念是：元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。！！！！

XML验证
拥有正确语法的 XML 被称为"形式良好"的 XML
通过 DTD 验证的XML是"合法"的 XML
合法的 XML 文档是"形式良好"的 XML 文档，这也符合文档类型定义（DTD）的规则：
